package com.app.controller;

import java.io.IOException;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.app.dto.CourseDTO;
import com.app.dto.DisplayCoursesDTO;
import com.app.dto.LectureDTO;
import com.app.entities.Course;
import com.app.service.CourseService;

@RestController
@RequestMapping("/courses")
public class CourseController {
	@Autowired
	private CourseService courseService;
	
	@CrossOrigin(origins = "http://localhost:5173/")
	@GetMapping
    public ResponseEntity<List<?>> getAllCourses() {
        List<DisplayCoursesDTO> courses = courseService.getAllCourses();
        return ResponseEntity.ok(courses);
    }
	
	@PostMapping
	public ResponseEntity<?> createCourse(@RequestPart("course") CourseDTO courseDTO,
			@RequestParam("file") MultipartFile file) throws IOException {
		CourseDTO createdCourse = courseService.createCourse(courseDTO, file);
		return new ResponseEntity<>(createdCourse, HttpStatus.CREATED);
	}
	
	@PostMapping("/{courseId}")
    public ResponseEntity<LectureDTO> addLectureToCourse(
        @PathVariable Long courseId,
        @RequestParam("title") String title,
        @RequestParam("description") String description,
        @RequestParam("video") MultipartFile videoFile
    ) throws IOException {
        LectureDTO lectureDTO = new LectureDTO();
		lectureDTO.setTitle(title);
		lectureDTO.setDescription(description);

		LectureDTO addedLecture = courseService.addLectureToCourse(courseId, lectureDTO, videoFile);
		return ResponseEntity.ok(addedLecture);
    }
}
